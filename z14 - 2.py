# Тут решаем все задачи
# http://www.itmathrepetitor.ru/s-zadachi-s-resheniyami-chisla-i-cikly-2/
# каждая задача должна оформлятся в виде функции которая что-то ВОЗВРАЩАЕТ (не просто принтит, а чтото возвращает)

# 1. Составьте программу, выводящую на экран квадраты чисел от 10 до 20 включительно.
# def ex1(a, b):
# 	c = []
# 	for a in range(a, b + 1):
# 		a = a * a
# 		c.append(a)
# 	return print(c)
# ex1(10, 20)
# проверено

# 2. Даны натуральные числа от 35 до 87. Вывести на консоль те из них, которые при делении на 7 дают остаток 1, 2 или 5.
# def ex2(a, b):
# 	c = []
# 	for a in range(a, b + 1):
# 		if a%7 == 1 or a%7 == 2 or a%7 == 5:
# 			c.append(a)
# 	return print(c)
# ex2(35, 87)
# проверено

#3. Найдите сумму  1+2+3+…+n, где число n вводится пользователем с клавиатуры.
# def ex3():
#     x = int(input('Введите число: '))
#     y = 0
#     for x in range(x+1):
#         # print(x)
#         y += x
#     return print(y)
# ex3()

#4. Найдите произведение цифр трехзначного числа.
# def ex4(a):
#     a = str(a)
#     return print(int(a[0]) * int(a[1]) * int(a[2]))
# ex4(234)


#5. Найдите количество четных цифр данного натурального числа.
# def ex5(a):
#     a = str(a)
#     y = len(a)
#     z = 0
#     for x in a:
#         x = int(x)
#         if x%2 == 0:
#             z += 1
#     return print(z)
# ex5(22256668)
# проверено

# все верно, молодец, но когда возвращаешь из функции print после return лучше не писать
# иначе
# f = ex5(22256668)
# print(f)  # распечатает None а должно число

#6. Найдите наибольшую цифру данного натурального числа.
# def ex6(a):
#     a = str(a)
#     y = len(a)
#     z = [0]
#     for x in a:
#         x = int(x)
#         if x >= z[0]:
#             z[0] = x
#     return print(z[0])
# ex6(45641234)
# проверено

# def ex6(a):
#     a = str(a)
#     y = len(a)
#     z = 0
#     for x in a:
#         x = int(x)
#         if x >= z:
#             z = x
#     return print(z)
# ex6(45841284)
# проверено

#7. Найдите все четырехзначные числа, сумма цифр каждого из которых равна 15.
# def ex7():
#     z = []
#     for x in range(1000, 10000):
#         x = str(x)
#         # print(x)
#         y = int(x[0])+int(x[1])+int(x[2])+int(x[3])
#         if y == 15:
#             z.append(int(x))
#     return z
# print(ex7())
# проверено

#8. Определите, является ли натуральное число простым.
# def ex8(x):
#     w = 0
#     y = x
#     for x in range(1, x+1):
#         if y%x == 0:
#             w += 1
#     if w == 2:
#         return 'True'
#     else:
#         return 'False'
# print(ex8(5))
# проверено

#9. Найдите все делители данного натурального числа.
# Любое натуральное число, на которое делится (без остатка) данное натуральное число, называется делителем данного числа.
# def ex9(x):
#     w = []                 # для счёта делителей числа
#     y = x
#     for x in range(1, x+1):
#         if y%x == 0:
#             w.append(x)
#     return w
# print(ex9(6))
# проверено

#10. Даны a и N. Вычислите aN без использования логарифма и экспоненты.
# def ex10(a, n):
#     y = 1
#     for n in range(n):
#         y = y * a
#     return y
# print(ex10(4,3))
# проверено

#11. В последовательности целых чисел найдите минимальное число и количество его повторений.
# def ex11(x):
#     y = x[0]
#     z = 0
#     for a in x:
#         # print(x)
#         if a < y:
#             y = a
#     for a in x:
#         # print(x)
#         if a == y:
#             z += 1
#     return y, z                      # минимальное y в количестве z
# print(ex11([4, 3, 6, 7, 4, 14, 88, 22, 4, 7, 6, 45, 4, 155, 88, 3]))


# 12. На плоскости задан круг с центром в начале координат и набор точек.
# Его радиус, количество точек и их координаты вводятся с клавиатуры. Найдите точку вне круга, ближайшую к нему.
# def ex12():
#     import math
#     a = []                                                          # список координат Х точек
#     b = []                                                          # список координат У точек
#     c = []                                                          # список C c расстояниями точек от центра
#     d = []                                                          # список точек, расположенных за окружностью
#     r = int(input('Введите радиус окружности: '))                   # радиус
#     n = int(input('Введите количество точек: '))                    # количество точек
#     n2 = n                                                          # чтобы пересчитать для заполнения списков b и c
#     n3 = n                                                          # чтобы пересчитать для заполнения списка d
#     for n in range(n):                                              # вводим и записываем в списки Х и У в списки
#         x = int(input('Введите x координату точки: '))
#         a.append(x)                                                 # список с Х
#         y = int(input('Введите y координату точки: '))
#         b.append(y)                                                 # список с У
#     for n2 in range(n2):
#         z = math.sqrt(a[n2] * a[n2] + b[n2] * b[n2])                # корень из суммы квадратов x и y
#         c.append(z)                                                 # список расстояний точек от центра
#     for n3 in range(n3):
#         if c[n3] > r:                                               # ищем точки вне круга >r
#             d.append(c[n3])                                         # список расстояний точек за окружностью
#     return 'Точка вне круга, ближайшая к нему: ', min(d)            # тут ты возвращаешь расстояние, не координаты x, y
# print(ex12())
# Всё верно, но можно проще.
# Не стоит импортировать внутри функции. Нужно возвращать координаты.

#                                                       ?????????????????????????????????????????????????????????????????????
#
# import math
# def ex121():
#     d = {}                                                          # список точек, расположенных за окружностью
#     r = int(input('Введите радиус окружности: '))                   # радиус
#     n = int(input('Введите количество точек: '))                    # количество точек
#     for n in range(n):                                              # вводим и записываем в списки Х и У в списки
#         x = int(input('Введите x координату точки: '))              # список с Х
#         y = int(input('Введите y координату точки: '))
#         distance = math.sqrt(x**2 + y**2)
#         if distance > r:
#             d[distance] = (x, y)
#     print(d)
#   # if distance:
#   #     return 'Точка вне круга, ближайшая к нему: ', distance[min(distance.keys())]
#     if d:
#         return 'Точка вне круга, ближайшая к нему: ', d[min(d.keys())]
# print(ex121())


# 13. Вдоль координатной прямой размещены N отрезков. Каждый отрезок задается координатами начала и конца xmin и xmax.
# Нужно найти какую-либо точку, принадлежащую всем отрезкам, или сообщить, что таких точек нет. Решение
# def ex13():
#     import math
#     a = []                                                         # список точек начала отрезков Х1
#     b = []                                                         # список точек концов отрезков Х2
#     c = 0
#     n = int(input('Введите количество отрезков: '))                # количество отрезков
#     n2 = n                                                         # для пересчёта
#     for n in range(n):                                             # вводим и записываем в списки Х и У в списки
#         xmin = int(input('Введите начальную точку отрезка: '))
#         a.append(xmin)                                             # список с x1
#         xmax = int(input('Введите конечную точку отрезка: '))
#         b.append(xmax)                                             # список с x2
#     amin = min(a)
#     bmax = max(b)
#     for x in range(amin, bmax+1):                                  # берём число в промежутке амин-bмакс
#         c = 0
#         for x2 in range(0, n+1):                                   # перебираем порядковые номера отрезков
#             if a[x2] <= x <= b[x2]:                                # если попадает в диапазон, то c+=1
#                 c += 1
#         if c == n2:                                                # если точка встретилась на всех отрезках, то это она
#             return x
#     return
# print(ex13())

# 14. Отрезок последовательности целых чисел образует числа, идущие в ней подряд.
# Найдите номера чисел, которыми начинается и заканчивается отрезок с максимальной суммой, а также эту сумму.
# пропусти эту задачу
# я сам незнаю что они имели ввиду



# 15. Вам нужно разбить бронированные плиты на оборонной башне противника, которая в плане имеет вид N-угольника.
# Для каждой стороны известно количество прикрывающих ее плит. Стрельба ведется из специальной двуствольной
# пушки - она ездит по рельсам вокруг башни и за один выстрел разбивает (по вашему желанию) или две плиты
# на одной стороне башни, или по одной плите на двух соседних сторонах. Найдите наименьшее число выстрелов,
# необходимых для разрушения всех плит.
# Вход. В первой строке текста - количество тестов M, в каждой из следующих M строк - тест.
# Тест задает число сторон N(3≤N≤107) и N целых неотрицательных чисел - количества плит на сторонах.




# 16. Стрелки часов движутся с постоянными угловыми скоростями и показывают h часов m минут.
# Найдите число полных минут до ближайшего момента, в который стрелки совпадут.
# Вход.Два целых числа h и m(на клавиатуре).
# Выход.Целое число минут(на экране).
# Пример.Вход: 0 0; выход: 0.
# Вход: 1 1; выход: 4.















