# Тут http://www.itmathrepetitor.ru/prog/zadachi-na-vychisleniya/
# решаем задачи с 75 по 144 включительно.
# каждая задача должна оформлятся в виде функции которая что-то ВОЗВРАЩАЕТ (не просто принтит, а чтото возвращает)

# 75. Выведите на экран 10 раз фразу "You are welcome!"
def ex75():
    for x in range(10):
        print('"You are welcome!"')
# ex75()

# 76. Выведите на экран n раз фразу "Silence is golden". Число n вводит пользователь.
def ex76():
    x = int(input('Сколько раз напечатать? '))
    for x in range(x):
        print('"Silence is golde"')
# ex76()

# 77. Выведите на экран прямоугольник из нулей. Количество строк вводит пользователь, количество столбцов равно 5.
def ex77():
    y = 5                                                     # количество столбцов
    x = int(input('Количество строк? '))
    print('00000')
    for x in range(x):
        print('0   0')
    print('00000')
# ex77()

# 78.Вывести на экран фигуру из звездочек:
# *******
# *******
# *******
# *******
# (квадрат из n строк, в каждой строке n звездочек)
def ex78():
    n = int(input('N? '))
    n2 = n
    for n in range(n):
        print('*'*n2)
# ex78()

# 79. Выведите на экран числа 1, 2, 3, 4, ..., 20.
def ex79():
    a = []
    for x in range(1, 21):
        a.append(x)
    print(a)
# ex79()

# 80. Вывести на экран ряд чисел 1001,  1004,  1007,  ... 1025.
def ex80():
    a = []
    for x in range(1001, 1026):
        a.append(x)
    print(a)
# ex80()

# 81. Вывести на экран числа 100, 96, 92, ... до последнего положительного включительно.
def ex81():
    for x in range(100, 0, -1):
        print(x)
# ex81()

# 82. Выведите на экран числа 1.2, 1.4, 1.6, ..., 2.8.
def ex82():
    for x in range(12, 28, 2):
        print(x/10)
# ex82()

# 83. Выведите следующие строки.
# Первая:           25 25.5 24.8.
# Вторая:           26 26.5 25.8.
# И так далее.
# Последняя строка: 35 35.5 34.8.
def ex83():
    for x in range(25, 36):
        print(x, x+0.5, x-0.2)
# ex83()

# 84. Пользователь вводит курс доллара в рублях. Показать таблицу цен 1$, 2$, ..., 100$ в рублях,
# третьим столбцом добавить количество кг конфет, которые можно купить на данные суммы, если цена 1 кг конфет равна 20 руб.
# Пример: 1$ - 70 р - 3.5 кг и так далее (всего 100 строк).
def ex84():
    for x in range(1, 101):
        print(x,'$  ', x*70,'р  ', x*3.5, 'кг')
# ex84()

# 85. Пользователь вводит количество строк.     ?????????????????????????????????????????????????
# Вывести на экран логотип соответствующего размера.
# Если текст не помещается, то вывести логотип без текста.

# 86. Для данного n найти сумму 1+2+3+...+n. Например, для n=10 ответ равен 55.
def ex86():
    n = int(input('Введите n:  '))
    x = 0
    for n in range(1,n+1):
        x = x + n
    return print(x)
# ex86()

# 87. Найти сумму 10+11+12+13+...+88. Материал сайта www.itmathrepetitor.ru
# Ответ: 3871
def ex87():
    x = 0
    for n in range(10,89):
        x = x + n
    return print(x)
# ex87()

# 88. Найти произведение 5⋅6⋅7⋅...⋅13.
def ex88():
    x = 5
    for n in range(6, 14):
        x = x * n
    return print(x)
# ex88()

# 89. Найти сумму  1+4+7+11+...+112  ????????????????????????????????????????

# 90. Найти сумму cos3/5+cos5/7+cos7/9+...+cos111/113.
import math
# def ex90():
#     a = []
#     b = []
#     for x in range(3, 112, 2):
#         a.append(x)
#     for x in range(5, 114, 2):
#         b.append(x)
#     d = 0
#     for n in range(0, len(a)):
#         d += math.cos(a[n]/b[n])
#     print(d)
# ex90()

def ex90():
    d = 0
    for a, b in zip(range(3, 112, 2), range(5, 114, 2)):
        d += math.cos(a/b)
        print(a)
    print(d)
# ex90()

# 91. Найти сумму 2/3+3/4+4/5+...+9/10
def ex91():
    d = 0
    for n in range(2, 10):
        d += n/(n + 1)
    print(d)
# ex91()

# 92. Вывести на экран сто первых сумм вида 1+2+3+...+n  ????????????????????????????????
def ex92():
    n = int(input("Введите n: "))
    for n in range(1, n+1):
        print(n)
# ex92()

# 93. Найдите сумму квадратов первых n натуральных чисел
def ex93():
    n = int(input("Введите n: "))
    x = 0
    for n in range(1, n+1):
        x += n ** 2
        print(n, x)
# ex93()

# 94. Найдите сумму 1+1/2+1/3+…+1/n.
def ex94():
    n = int(input("Введите n: "))
    x = 0
    for n in range(1, n+1):
        x += 1/n
        print(n,'  -  ', x)
# ex94()

# 95. Даны a и n. Вычислите p=(a+1)2(a+2)2⋅…⋅(a+n)2        1*4*9
def ex95():
    a = int(input("Введите a: "))
    n = int(input("Введите n: "))
    p = 1
    for n in range(1, n+1):
        p *= (a + n)**2
        print(n,'  -  p=', p)
# ex95()

# 96. Дано натуральное число n. Вычислите 1/cosx+1/cosx2+…+1/cosxn
def ex96():
    n = int(input("Введите n: "))
    x = int(input("Введите значение углa x: "))
    sum = 0
    for n in range(1, n):
        sum += 1/(math.cos(x**n))
        print(sum)
# ex96()

# 97. Вычислите 1⋅2+2⋅3⋅4+...+n⋅(n+1)⋅…⋅2n.   ?????????????????????????
# while True:
#     n = int(input('Введите n > 0: '))
#     if n > 0:
#         break
# if n == 1:
#     s = 2
# else:
#     s = 2
#     p = 2
#     for i in range(2, n+1):
#         p = p * 2 * i * (2 * i - 1) / (i-1)
#         s += p
#     print('S = %d' % s)

def ex97():
    n = int(input('Введите n > 0: '))
    s = 2
    p = 2
    for i in range(2, n + 1):
        p = p * 2 * i * (2 * i - 1) / (i - 1)
        s += p
    print('S = ', s)
# ex97()

# 98. Начав тренировки, лыжник в первый день пробежал 10 км.
# Каждый следующий день он увеличивал пробег на 10% от пробега предыдущего дня.
# Определите: а) пробег лыжника за второй, третий, ..., десятый день тренировок;
# б) какой суммарный путь он пробежал за первые 7 дней тренировок.
# в) суммарный путь за n дней тренировок;
# г) в какой день ему следует прекратить увеличивать пробег, если он не должен превышать 80 км?
def ex98():
    a = {}                                                    # словарь. будем хранить день:количество километров
    n = 10                                                    # количество дней тренировки
    x = 10                                                    # лыжник в первый день пробежал 10 км
    sum = 0
    for n in range(1, 11):
        a[n] = '%.2f' % x
        x = x*1.1
    # print(a)
    for n in range(1, 11):                                                 # пробег лыжника за второй, третий, ..., десятый день тренировок
        print('Пробег лыжника за', n, 'день', a[n], 'км.')
    for n in range(1, 8):                                                  # суммарный путь за первые 7 дней тренировок
        sum = sum + float(a[n])
    print('Пробег за первые 7 дней тренировок ', sum, 'км.')
    y = int(input('За сколько дней пробежек вывести суммарный путь?'))     # суммарный путь за n дней тренировок
    sum = 0
    for y in range(1, y+1):
        sum += float(a[y])
    print('Пробег за первые', y, 'дней тренировок ', '%.2f' % sum, 'км.')
    sum = 0                                                                # в какой день следует прекратить пробег, если он не должен превышать 80 км
    for n in range(1, 11):
        sum += float(a[n])
        if sum > 80:
            print('На', n, 'день следует прекратить пробег. Иначе будет превышение 80 км.')
            break
# ex98()

# 99. Вывести на экран числа от 1000 до 9999 такие, что все цифры различны.
def ex99():
    for x in range(1000, 10000):
        x = str(x)
        if x[0] != x[1] and x[0] != x[2] and x[0] != x[3] and x[1] != x[2] and x[1] != x[3] and x[2] != x[3]:
            print(x)
# ex99()

# for i in range (1000,9999+1):
#     x=list(str(i))
#     if len(x)==len(set(x)):
#         if "6" not in x and "5" not in x:
#             print(i)

# 100. Вывести на экран числа от 1000 до 9999 такие, что среди цифр нет цифр 5 и цифры 6.
def ex100():
    for x in range(100, 1000):
        x = str(x)
        # for y in range(0, 2):
        #     if x[y] != ('5'):
        #         print(x)
        if x[0] != ('5') and x[1] != ('5') and x[2] != ('5') and x[0] != ('6') and x[1] != ('6') and x[2] != ('6'):
            print(x)
# ex100()

# 101. Вывести все пятизначные числа, которые делятся на 2, у которых средняя цифра нечетная,
# и сумма всех цифр делится на 4. Материал сайта www.itmathrepetitor.ru  10000 - 99999
def ex101(a,b):
    for x in range(a, b+1):
        if x%2 == 0:
            x = str(x)
            y = int(x[2])
            if y % 2 != 0:
                # print(x)
                z = int(x[0]) + int(x[1]) + int(x[2]) + int(x[3]) + int(x[4])
                if z%4 == 0:
                    print(x)
    return
# ex101(10000, 99999)

# 102. Вывести на экран числа от 1000 до 9999 такие, что среди цифр есть цифра 3.
def ex102(a, b):
    for x in range(a, b + 1):
        x = str(x)
        for y in range(0, 4):
            if int(x[y]) == 3:
                print(x)
                break
    return
# ex102(1000, 9999)

# 103. Найдите трехзначные числа, равные сумме кубов своих цифр.
def ex103(a, b):
    global x
    for x in range(a, b):
        x1 = str(x)
        y = int(x1[0])**3 + int(x1[1])**3 + int(x1[2])**3
        if x == y:
            print(x)
# ex103(100, 1000)

# 104. Сколько существует четырехзначных чисел, которые в 600 раз больше суммы своих цифр?
def ex104(a, b):
    n = 0
    for x in range(a, b):
        x1 = str(x)
        z = x
        y = (int(x1[0]) + int(x1[1]) + int(x1[2]) + int(x1[3]))*600       # сумма цифр числа
        if z == y:
            n += 1
    return(n)
# print(ex104(1000, 10000))

# 105. Найдите хотя бы одно натуральное число, которое делится на 11, а при делении на 2, 3, 4, ..., 10 дает в остатке 1
def ex105(a,b):
    for x in range(a,b):
        if x % 11 == 0:
            if x % 2 == 1:
                if x % 3 == 1:
                    if x % 4 == 1:
                        if x % 5 == 1:
                            if x % 6 == 1:
                                if x % 7 == 1:
                                    if x % 8 == 1:
                                        if x % 9 == 1:
                                            if x % 10 == 1:
                                                print(x)
    return
# ex105(0, 82000)

# 106. Вывести на экран n единиц, затем 2n двоек, затем 3n троек. Число n вводит пользователь.
def ex106():
    n = int(input('Введите число:  ' ))
    for n in range(1, n+1):
        x = str(n)
        print(x*n)
    return
# ex106()

# 107. Вывести ряд чисел: десять десяток, девять девяток, восемь восьмерок, ... , одну единицу.
# Найти сумму всех этих чисел.
def ex107():
    sum = 0
    for n in range(10, 0, -1):
        x = str(n)
        y = int(x*n)
        print(y)
        sum += y
    return 'сумма этих чисел = ', sum
# print(ex107())

# 108. Выведите  на экран строки (в последней строке n звездочек):
# *
# **
# ***
# ****
# *****
def ex108():
    n = int(input('Введите число:  ' ))
    for n in range(1, n+1):
        print('*'*n)
    return
# ex108()

# 109. Выведите на экран строки вида:
# *******
# ****
# *******
# ****
# *******
# ****
# (всего n строк, звездочек или 7, или 4 по очереди)
def ex109():
    n = int(input('Введите число:  ' ))
    for n in range(1, n+1):
        if n%2 == 0:
            print('*' * 4)
        else:
            print('*' * 7)
    return
# ex109()

# 110. Вывести на экран:
# AAABBBAAABBBAAABBB
# BBBAAABBBAAABBBAAA
# AAABBBAAABBBAAABBB
# (таких строк n, в каждой строке m троек AAA)
def ex110():
    n = int(input('Введите число строк, n:  ' ))
    m = int(input('Введите число троек, m:  '))
    for n in range(1, n+1):
        if n%2 == 0:
            print('BBBAAA' * m)
        else:
            print('AAABBB' * m)
# ex110()

# 111. Вывести на экран:
# AAAAAAAAAAAAAAAA
# ABBBBBBBBBBBBBBA
# ABBBBBBBBBBBBBBA
# ABBBBBBBBBBBBBBA
# AAAAAAAAAAAAAAAA
# (количество строк вводит пользователь, ширина прямоугольника в два раза больше высоты)
def ex111():
    n = int(input('Введите число строк, n:  '))              #5
    m = 2 * n                                                #10
    print('A' * m)
    for n in range(1, n-1):
        print('A'+'B' * (m-2)+'A')
    print('A' * m)
    return
# ex111()

# 112. Выведите на экран квадрат из нулей и единиц, причем нули находятся только на диагонали квадрата.
# Всего в квадрате сто цифр.
def ex112():
    x = ''
    a = ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
    for n in range(0, 10):
        a[n] = '0'
        a[9 - n] = '0'
        print(x.join(a))
        a[n] = '1'
        a[9 - n] = '1'
# ex112()

# 113. Вывести на экран 20 строк. В строках с четными номерами вывести по 10 чисел, равных номеру строки.
# В строках с нечетными номерами вывести десять единиц.
def ex113():
    for x in range(1, 21):
        if x%2 == 0:          # если чётное число
            # x = str(x)
            print(str(x)*10)
        else:                 # если нечётное число
            print(1111111111)
    return
# ex113()

# 114. Вывести 30 строк.
# Нечетные строки содержат натуральные числа от 1 до номера текущей строки включительно с шагом 1,
# четные строки состоят  из пяти единиц.
def ex114():
    for x in range(1, 31):
        # print(x)
        if x%2 == 0:          # если чётное число
            print(11111)
        else:                 # если нечётное число
            b = []
            for a in range(1, x+1):
                b.append(a)
            print(b)
    return
# ex114()

# 115. Выведите на экран таблицу умножения для чисел от 1 до 10.
def ex115(a, b):
    z = 0
    for x in range(a):
        x += 1
        for y in range(b):
            y += 1
            z = x * y
            print(x, ' * ', y, ' = ', z)
    return
# ex115(10, 10)

# 116. Найдите количество целых чисел от a до b включительно, которые делятся на 12.
def ex116(a,b):
    n = 0
    for x in range(a, b+1):
        if x%12 == 0:
            n += 1
    print(n)
# ex116(1, 25)

# 117. Пользователь вводит ненулевые числа до тех пор пока не введет ноль. Найдите сумму этих чисел.
def ex117():
    sum = 0
    for i in range(1000):
        x = int(input('Введите число:  '))
        if x != 0:
            sum += x
        else:
            break
    print(sum)
# ex117()

# 118. Пользователь вводит ненулевые целые числа до тех пор, пока не введет ноль.
# Найдите количество четных чисел, которые он ввел.
def ex118():
    sum = 0
    n = 0
    for i in range(1000):
        x = int(input('Введите число:  '))
        if x != 0:
            if x%2 == 0:
                n += 1
        else:
            break
    print(n)
# ex118()

# 119. Найдите четырехзначные числа, сумма цифр которых равна 15.
def ex119(a, b):
    n = 0
    for x in range(a, b):
        y = int(str(x)[0]) + int(str(x)[1]) + int(str(x)[2]) + int(str(x)[3])
        if y == 15:
            n += 1
    print(n)
# ex119(1000, 10000)


# 120. Найдите наибольшую цифру в данном натуральном числе.
def ex120():
    max = 0
    x = input('Введите число: ')            # строка
    a = len(x)
    # print(a)
    for i in range(0, a):
        y1 = x[i]
        y = int(y1)
        if y > max:
            max = y
    print(max)
# ex120()

# 121. Дано натуральное число. Найдите количество четных цифр.
def ex121():
    x = input('Введите натуральное число:  ')
    n = 0
    a = len(x)
    for i in range(0, a):
        y = int(x[i])
        if y%2 == 0 and y != 0:
            n += 1
    print(n)
# ex121()

# 122. В данном натуральном числе найдите количество цифр, которые больше 3, но меньше 8.
def ex122():
    x = input('Введите натуральное число:  ')
    n = 0
    a = len(x)
    for i in range(0, a):
        y = int(x[i])
        if y > 3 and y < 8:
            n += 1
    print(n)
# ex122()

# 123. Для данного натурального числа найдите число, цифры которого записаны в обратном порядке.
def ex123():
    x = input('Введите натуральное число:  ')     # получили число строкой
    a = len(x)                                    # длина числа
    x1 = x(0:5)
    for i in range(a, 0, -1):
        # y = int(x[i])
        print(i)

        # >> > s = 'spameggs'
        # >> > s[3:5]
ex123()







